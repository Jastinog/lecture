# Generated by Django 5.2.6 on 2025-09-20 07:40

import apps.lecture.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Language code (e.g., 'en', 'ru')",
                        max_length=10,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Language name (e.g., 'English', 'Russian')",
                        max_length=100,
                    ),
                ),
                (
                    "native_name",
                    models.CharField(
                        help_text="Native language name (e.g., 'English', 'Русский')",
                        max_length=100,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TopicGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Group name (e.g., 'Lectures', 'Kirtans', 'Conversations')",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Group code (e.g., 'lectures', 'kirtans', 'conversations')",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the topic group"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order for displaying groups"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Lecturer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=255, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=apps.lecture.models.lecturer_photo_path,
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order for displaying lecturers"
                    ),
                ),
                (
                    "level",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Founder-Acharya"),
                            (2, "Direct Disciple"),
                            (3, "Grand Disciple"),
                        ],
                        default=2,
                        help_text="Spiritual hierarchy level: 1=Founder-Acharya, 2=Direct Disciple, 3=Grand Disciple",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["level", "order", "name"],
                "indexes": [
                    models.Index(
                        fields=["level", "order"], name="lecture_lec_level_07ec18_idx"
                    )
                ],
                "unique_together": {("order",)},
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=255)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=apps.lecture.models.topic_cover_path,
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "languages",
                    models.ManyToManyField(
                        help_text="Languages available in this topic",
                        related_name="topics",
                        to="lecture.language",
                    ),
                ),
                (
                    "lecturer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topics",
                        to="lecture.lecturer",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group this topic belongs to",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="topics",
                        to="lecture.topicgroup",
                    ),
                ),
            ],
            options={
                "ordering": ["lecturer", "group", "order"],
            },
        ),
        migrations.CreateModel(
            name="Lecture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "audio_file",
                    models.FileField(upload_to=apps.lecture.models.lecture_upload_path),
                ),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("duration", models.IntegerField(blank=True, null=True)),
                ("order", models.PositiveIntegerField()),
                (
                    "year",
                    models.PositiveIntegerField(
                        blank=True, help_text="Year of the lecture", null=True
                    ),
                ),
                (
                    "event",
                    models.CharField(
                        blank=True,
                        help_text="Event or occasion of the lecture",
                        max_length=255,
                    ),
                ),
                (
                    "file_hash",
                    models.CharField(
                        blank=True,
                        help_text="SHA256 hash of original filename for duplicate detection",
                        max_length=64,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "language",
                    models.ForeignKey(
                        help_text="Language of this lecture",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lectures",
                        to="lecture.language",
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lectures",
                        to="lecture.topic",
                    ),
                ),
            ],
            options={
                "ordering": ["topic", "language", "order"],
            },
        ),
        migrations.CreateModel(
            name="CurrentLecture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="current_lectures",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lecture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="current_players",
                        to="lecture.lecture",
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="current_listeners",
                        to="lecture.topic",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FavoriteLecture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_lectures",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lecture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorited_by",
                        to="lecture.lecture",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "created_at"],
                        name="lecture_fav_user_id_fbe448_idx",
                    )
                ],
                "unique_together": {("user", "lecture")},
            },
        ),
        migrations.CreateModel(
            name="LectureHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("listened_at", models.DateTimeField(auto_now_add=True)),
                (
                    "duration_listened",
                    models.IntegerField(
                        default=0, help_text="Duration listened in seconds"
                    ),
                ),
                (
                    "completion_percentage",
                    models.FloatField(
                        default=0.0, help_text="Percentage of lecture completed"
                    ),
                ),
                (
                    "lecture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history_records",
                        to="lecture.lecture",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lecture_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "listened_at"],
                        name="lecture_lec_user_id_03b673_idx",
                    ),
                    models.Index(
                        fields=["user", "lecture"],
                        name="lecture_lec_user_id_a71208_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="LectureProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_time",
                    models.FloatField(
                        default=0.0, help_text="Current playback position in seconds"
                    ),
                ),
                (
                    "completed",
                    models.BooleanField(
                        default=False, help_text="Whether lecture was fully listened to"
                    ),
                ),
                (
                    "listen_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of times this lecture was played"
                    ),
                ),
                ("last_listened", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "lecture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="progress_records",
                        to="lecture.lecture",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lecture_progress",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "lecture"],
                        name="lecture_lec_user_id_5cffdd_idx",
                    ),
                    models.Index(
                        fields=["user", "completed"],
                        name="lecture_lec_user_id_b07901_idx",
                    ),
                    models.Index(
                        fields=["updated_at"], name="lecture_lec_updated_4268a9_idx"
                    ),
                ],
                "unique_together": {("user", "lecture")},
            },
        ),
        migrations.AddIndex(
            model_name="lecture",
            index=models.Index(
                fields=["topic", "language", "file_hash"],
                name="lecture_lec_topic_i_df7db8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="lecture",
            index=models.Index(
                fields=["language"], name="lecture_lec_languag_357240_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="lecture",
            unique_together={("topic", "order", "language")},
        ),
        migrations.AddIndex(
            model_name="currentlecture",
            index=models.Index(
                fields=["user", "topic"], name="lecture_cur_user_id_90b0f9_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="currentlecture",
            unique_together={("user", "topic")},
        ),
        migrations.AddIndex(
            model_name="topic",
            index=models.Index(
                fields=["lecturer", "group"], name="lecture_top_lecture_e1b75b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="topic",
            index=models.Index(fields=["group"], name="lecture_top_group_i_189227_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="topic",
            unique_together={("lecturer", "order", "code")},
        ),
    ]
